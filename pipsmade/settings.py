"""
Django settings for pipsmade project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_(8m83i6w!@-8576k%(l&9r_28i0#_9$eg+=tqu0b1%_d)+4jt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'testserver']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts.apps.AccountsConfig',
    'dashboard.apps.DashboardConfig',
    'investments.apps.InvestmentsConfig',
    'transactions.apps.TransactionsConfig',
    'support.apps.SupportConfig',
    'faq.apps.FaqConfig',
    'crypto_news.apps.CryptoNewsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pipsmade.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pipsmade.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration (for admin notifications and support)
# For production - Gmail SMTP configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# Email credentials - use environment variables in production
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'Celewizzy106@gmail.com')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', 'ztgy cejw avyr qgkh')

# For development - uncomment this line to go back to console output
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Email settings for support system
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'support@pipsmade.com')
SUPPORT_EMAIL = os.environ.get('SUPPORT_EMAIL', 'support@pipsmade.com')
ADMIN_EMAIL = os.environ.get('ADMIN_EMAIL', 'Celewizzy106@gmail.com')

# Email templates and branding
SITE_NAME = 'PipsMade'
SITE_URL = os.environ.get('SITE_URL', 'https://pipsmade.com')

# Support system settings
SUPPORT_RESPONSE_TIME = '2-4 hours'
SUPPORT_BUSINESS_HOURS = '24/7 Available'

# Login/Logout URLs
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/dashboard/'
LOGOUT_REDIRECT_URL = '/'

# Render.com Configuration
if os.environ.get('RENDER'):
    # Render.com specific settings
    DEBUG = False
    ALLOWED_HOSTS = ['.onrender.com', 'pipsmade.com', 'www.pipsmade.com',]
    
    # Database - Use SQLite for Render.com free tier
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
    
    # Static files
    STATIC_ROOT = BASE_DIR / 'staticfiles'
    STATIC_URL = '/static/'
    
    # Security
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    
elif os.environ.get('RAILWAY'):
    # Railway.app specific settings
    DEBUG = False
    ALLOWED_HOSTS = ['.railway.app', '.up.railway.app', 'pipsmade.com', 'www.pipsmade.com',]
    
    # Database - Use SQLite on Railway (same as local)
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
    
    # Static files
    STATIC_ROOT = BASE_DIR / 'staticfiles'
    STATIC_URL = '/static/'
    
    # Security
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    
    # Railway-specific email configuration
    # Use environment variables for email settings
    EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'Celewizzy106@gmail.com')
    EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', 'ztgy cejw avyr qgkh')
    DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', 'support@pipsmade.com')
    SUPPORT_EMAIL = os.environ.get('SUPPORT_EMAIL', 'support@pipsmade.com')
    ADMIN_EMAIL = os.environ.get('ADMIN_EMAIL', 'Celewizzy106@gmail.com')
    
    # Ensure email backend is properly configured for Railway
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
    
    # Logging for debugging email issues
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
            'file': {
                'class': 'logging.FileHandler',
                'filename': 'django.log',
            },
        },
        'loggers': {
            'django': {
                'handlers': ['console', 'file'],
                'level': 'INFO',
            },
            'django.request': {
                'handlers': ['console', 'file'],
                'level': 'DEBUG',
                'propagate': False,
            },
            'accounts.email_notifications': {
                'handlers': ['console', 'file'],
                'level': 'DEBUG',
            },
            'transactions.email_notifications': {
                'handlers': ['console', 'file'],
                'level': 'DEBUG',
            },
        },
    }
else:
    # Local development settings
    DEBUG = True
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'testserver']
