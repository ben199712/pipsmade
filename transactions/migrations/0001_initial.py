# Generated by Django 5.2.2 on 2025-08-14 00:02

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CryptoWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto_type', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('BNB', 'Binance Coin'), ('ADA', 'Cardano'), ('DOT', 'Polkadot'), ('LTC', 'Litecoin'), ('XRP', 'Ripple'), ('DOGE', 'Dogecoin'), ('MATIC', 'Polygon')], max_length=10, unique=True)),
                ('wallet_address', models.CharField(max_length=255)),
                ('network', models.CharField(help_text='e.g., ERC-20, BEP-20, TRC-20', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('minimum_deposit', models.DecimalField(decimal_places=8, default=0.001, max_digits=12)),
                ('deposit_fee_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('withdrawal_fee_percentage', models.DecimalField(decimal_places=2, default=2.0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['crypto_type'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('investment', 'Investment'), ('profit', 'Profit'), ('fee', 'Fee'), ('bonus', 'Bonus'), ('refund', 'Refund')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('crypto_type', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('BNB', 'Binance Coin'), ('ADA', 'Cardano'), ('DOT', 'Polkadot'), ('LTC', 'Litecoin'), ('XRP', 'Ripple'), ('DOGE', 'Dogecoin'), ('MATIC', 'Polygon')], max_length=10)),
                ('usd_equivalent', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('transaction_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('from_address', models.CharField(blank=True, max_length=255, null=True)),
                ('to_address', models.CharField(blank=True, max_length=255, null=True)),
                ('network_fee', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('platform_fee', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('admin_notes', models.TextField(blank=True)),
                ('user_notes', models.TextField(blank=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_transactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DepositRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('transaction_hash', models.CharField(help_text='Blockchain transaction hash', max_length=255)),
                ('proof_image', models.ImageField(blank=True, help_text='Screenshot of transaction', null=True, upload_to='deposit_proofs/')),
                ('sender_address', models.CharField(help_text='Address you sent from', max_length=255)),
                ('admin_verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crypto_wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.cryptowallet')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_requests', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_deposits', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_request', to='transactions.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('deposit_confirmed', 'Deposit Confirmed'), ('withdrawal_approved', 'Withdrawal Approved'), ('withdrawal_rejected', 'Withdrawal Rejected'), ('withdrawal_completed', 'Withdrawal Completed'), ('transaction_failed', 'Transaction Failed')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='transactions.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto_type', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('BNB', 'Binance Coin'), ('ADA', 'Cardano'), ('DOT', 'Polkadot'), ('LTC', 'Litecoin'), ('XRP', 'Ripple'), ('DOGE', 'Dogecoin'), ('MATIC', 'Polygon')], max_length=10)),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['crypto_type'],
            },
        ),
        migrations.CreateModel(
            name='WithdrawalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto_type', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('USDT', 'Tether (USDT)'), ('BNB', 'Binance Coin'), ('ADA', 'Cardano'), ('DOT', 'Polkadot'), ('LTC', 'Litecoin'), ('XRP', 'Ripple'), ('DOGE', 'Dogecoin'), ('MATIC', 'Polygon')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('1E-8'))])),
                ('destination_address', models.CharField(help_text='Address to send crypto to', max_length=255)),
                ('network', models.CharField(help_text='Network (e.g., ERC-20, BEP-20)', max_length=50)),
                ('network_fee', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('platform_fee', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('two_factor_verified', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True)),
                ('sent_transaction_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_withdrawals', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_request', to='transactions.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'status'], name='transaction_user_id_9cef77_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', 'status'], name='transaction_transac_ed11cf_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='transaction_created_67ce7b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userwallet',
            unique_together={('user', 'crypto_type')},
        ),
    ]
